Fixing one problem that can occur in nightly Roles DB data feeds  
(where we run out of qualifier_id's for a qualifier_type and get a
unique constraint rdb_pk_q_qualifier_id error).
-------------------------------------------------------------------------

The description below applies to getting an error for a cost object, and 
the fix involved moving qualifier_id numbers for ORG2-type qualifiers.
However, the technique would apply generically to similar errors for
other qualifier types.

In the nightly feed program for Profit Centers and Cost Objects, we got
the following error message:
 insert into qualifier (QUALIFIER_ID, QUALIFIER_CODE, QUALIFIER_NAME, 
 QUALIFIER_TYPE, CUSTOM_HIERARCHY, HAS_CHILD, QUALIFIER_LEVEL) 
 values('580000','I4537317','Please Install A Fire Extinguisher', 'COST',
 'N','N','8')
 ERROR at line 1:
 ORA-00001: unique constraint (ROLESBB.RDB_PK_Q_QUALIFIER_ID) violated

This meant that the feed program was trying to insert a record into the 
RDB_T_QUALIFIER table (synonym QUALIFIER) with qualifier_id = 580000, but
a qualifier already existed in the table with qualifier_id = 580000.

Why would the feed program have this error?  

The answer has to do with the way that the qualifier table is organized.
Each qualifier type has a range of qualifier_id numbers to use.  This 
has usually worked fine, because qualifiers of a given type do not change 
very often, and never need more than 100,000 or so numbers in a range. 
However, qualifiers of type COST and FUND are numerous, and keep growing.
If the next sequential qualifier_id number for a given qualifier_type bumps
up into the lowest qualifier_id number of the next type, then we get this
error message.

You can see the various qualifier types and ranges of numbers in use by
entering the SELECT statement
  select qualifier_type, min(qualifier_id), max(qualifier_id)
  from qualifier
  group by qualifier_type
  order by min(qualifier_id);

QUALIFIER
TYPE     min(qualifier_id)  max(qualifier_id)
----     ----------------- -----------------
NULL                     0                 0
CATE                100001            100025
QTYP                120000            120022
SPGP                150000            153913
ORGU                200001            200649
LORG                220000            221840
PBUD                260000            263303
AORG                300000            300112
IAPS                350000            350040
COST                400001            579938
PRIN                580000            580324
PROF                600001            600960
DEPT                650000            651974
FUND                700000            769025
BUDG                800000            800043
BAGS                810000            810363
EHSG                820000            820018
SISO                850000            850252
ORG2                870000            870860
PMIT               1200000           1201274
PYTG               2200000           2200494
PCCS               3200000           3385889

From the data above, we see that 
the range of QUALIFIER_IDs available for qualifiers of type COST was limited 
to 400001 - 579999.  It cannot go above 579999 because there is a type-PRIN
qualifier with qualifier_id 580000.  We've run out of numbers for 
the COST qualifiers.  
We need to move the qualifiers of the type getting in the way of 
the COST qualifiers, i.e., qualifiers of type PRIN (currently 580000 - 580324)
to make more room for COST qualifiers.
We'll move them to the range starting at 4500000.  That means
we're adding objects where qualifier_id is the old qualifier_id + 3920000

Here is what we will do to fix the problem.  Since there are no 
functions that refer to qualifier_type PRIN, we can make this a simple
process.  We would need to do more steps if the qualifier_type to be 
moved involved existing functions and authorizations.
 2. Clone the PRIN qualifiers.
      insert into qualifier
        (QUALIFIER_ID, qualifier_code, qualifier_name, qualifier_type, 
         HAS_CHILD, QUALIFIER_LEVEL, CUSTOM_HIERARCHY)
        select QUALIFIER_ID+3920000, '1' || substr(qualifier_code, 2),
               qualifier_name, 'PRIN',
               has_child, qualifier_level, custom_hierarchy
        from qualifier where qualifier_type = 'PRIN';
 3. Clone the PRIN-related records in qualifier_child and qualifier_descendent
      insert into qualifier_child
        (parent_id, child_id)
        select PARENT_ID+3920000, CHILD_ID+3920000
        from qualifier_child where parent_id between 580000 and 590000;
      insert into qualifier_descendent
        (parent_id, child_id)
        select PARENT_ID+3920000, CHILD_ID+3920000
        from qualifier_descendent where parent_id between 580000 and 590000;
 4. Clone the PRIN-related records in primary_auth_descendent
      insert into primary_auth_descendent
       (parent_id, child_id, is_dlc)
       select parent_id, child_id+3920000, is_dlc
       from primary_auth_descendent
       where child_id between 580000 and 590000;
 5. There is no need to move DEPT links for PRIN-related objects, since 
    they are "cloned" qualifier records anyway.  Nothing to do here.
 6. No need to do anything about authorizations.  
      update authorization set qualifier_id = qualifier_id+3920000
         where qualifier_id between 580000 and 590000;
 9. delete old records from primary_auth_descendent
      delete from primary_auth_descendent
       where child_id between 580000 and 590000;
 10. delete old records from qualifier_child and qualifier_descendent
      delete from qualifier_child
       where child_id between 580000 and 590000;
      delete from qualifier_descendent
       where child_id between 580000 and 590000;
 11. delete old records from qualifier
      delete from qualifier
       where qualifier_id between 580000 and 590000;
 12. Fix the qualifier_code for cloned qualifiers
    update qualifier set qualifier_code = '0' || substr(qualifier_code, 2)
      where qualifier_type = 'PRIN';


